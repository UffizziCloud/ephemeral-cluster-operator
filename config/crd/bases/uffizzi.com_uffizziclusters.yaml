---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: uffizziclusters.uffizzi.com
spec:
  group: uffizzi.com
  names:
    kind: UffizziCluster
    listKind: UffizziClusterList
    plural: uffizziclusters
    shortNames:
    - uc
    - ucluster
    singular: uffizzicluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.host
      name: Host
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UffizziCluster is the Schema for the UffizziClusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UffizziClusterSpec defines the desired state of UffizziCluster
            properties:
              helm:
                items:
                  properties:
                    chart:
                      properties:
                        name:
                          type: string
                        repo:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - repo
                      type: object
                    release:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    values:
                      type: string
                  required:
                  - chart
                  - release
                  type: object
                type: array
              ingress:
                description: UffiClusterIngress defines the ingress capabilities of
                  the cluster, the basic host can be setup for all
                properties:
                  class:
                    type: string
                  cluster:
                    properties:
                      certManagerTLSEnabled:
                        type: boolean
                      ingressAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  host:
                    type: string
                  services:
                    items:
                      properties:
                        certManagerTLSEnabled:
                          type: boolean
                        ingressAnnotations:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                        port:
                          format: int32
                          type: integer
                      required:
                      - name
                      - namespace
                      - port
                      type: object
                    type: array
                  syncFromManifests:
                    default: true
                    type: boolean
                type: object
              manifests:
                type: string
              storage:
                properties:
                  syncFromManifests:
                    properties:
                      persistentVolumeClaims:
                        type: boolean
                      persistentVolumes:
                        type: boolean
                      storageClasses:
                        type: boolean
                    type: object
                type: object
              ttl:
                type: string
              upgrade:
                type: boolean
            type: object
          status:
            description: UffizziClusterStatus defines the observed state of UffizziCluster
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              exposedServices:
                items:
                  properties:
                    host:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - host
                  - name
                  - namespace
                  type: object
                type: array
              helmReleaseRef:
                type: string
              host:
                type: string
              kubeConfig:
                description: VClusterKubeConfig is the KubeConfig SecretReference
                  of the related VCluster
                properties:
                  secretRef:
                    description: SecretKeyReference contains enough information to
                      locate the referenced Kubernetes Secret object in the same namespace.
                      Optionally a key can be specified. Use this type instead of
                      core/v1 SecretKeySelector when the Key is optional and the Optional
                      field is not applicable.
                    properties:
                      key:
                        description: Key in the Secret, when not specified an implementation-specific
                          default key is used.
                        type: string
                      name:
                        description: Name of the Secret.
                        type: string
                    required:
                    - name
                    type: object
                type: object
              lastAppliedConfiguration:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
